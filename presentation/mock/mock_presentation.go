// Code generated by MockGen. DO NOT EDIT.
// Source: ./presentation/presentation.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	params "github.com/knox-networks/knox-go/params"
)

// MockPresentationClient is a mock of PresentationClient interface.
type MockPresentationClient struct {
	ctrl     *gomock.Controller
	recorder *MockPresentationClientMockRecorder
}

// MockPresentationClientMockRecorder is the mock recorder for MockPresentationClient.
type MockPresentationClientMockRecorder struct {
	mock *MockPresentationClient
}

// NewMockPresentationClient creates a new mock instance.
func NewMockPresentationClient(ctrl *gomock.Controller) *MockPresentationClient {
	mock := &MockPresentationClient{ctrl: ctrl}
	mock.recorder = &MockPresentationClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPresentationClient) EXPECT() *MockPresentationClientMockRecorder {
	return m.recorder
}

// SharePresentation mocks base method.
func (m *MockPresentationClient) SharePresentation(p params.SharePresentationParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SharePresentation", p)
	ret0, _ := ret[0].(error)
	return ret0
}

// SharePresentation indicates an expected call of SharePresentation.
func (mr *MockPresentationClientMockRecorder) SharePresentation(p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SharePresentation", reflect.TypeOf((*MockPresentationClient)(nil).SharePresentation), p)
}
