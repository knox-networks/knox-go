// Code generated by MockGen. DO NOT EDIT.
// Source: ./credential/credential.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	params "github.com/knox-networks/knox-go/params"
	credential_adapter "github.com/knox-networks/knox-go/service/credential_adapter"
)

// MockCredentialClient is a mock of CredentialClient interface.
type MockCredentialClient struct {
	ctrl     *gomock.Controller
	recorder *MockCredentialClientMockRecorder
}

// MockCredentialClientMockRecorder is the mock recorder for MockCredentialClient.
type MockCredentialClientMockRecorder struct {
	mock *MockCredentialClient
}

// NewMockCredentialClient creates a new mock instance.
func NewMockCredentialClient(ctrl *gomock.Controller) *MockCredentialClient {
	mock := &MockCredentialClient{ctrl: ctrl}
	mock.recorder = &MockCredentialClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCredentialClient) EXPECT() *MockCredentialClientMockRecorder {
	return m.recorder
}

// Request mocks base method.
func (m *MockCredentialClient) Request(arg0 params.RequestCredentialParams) (credential_adapter.VerifiableCredential, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Request", arg0)
	ret0, _ := ret[0].(credential_adapter.VerifiableCredential)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Request indicates an expected call of Request.
func (mr *MockCredentialClientMockRecorder) Request(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Request", reflect.TypeOf((*MockCredentialClient)(nil).Request), arg0)
}
